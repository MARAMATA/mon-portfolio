# A generic, single database configuration.

[alembic]
# Chemin vers les scripts de migration
script_location = migrations

# Template utilisÃ© pour gÃ©nÃ©rer les fichiers de migration
# (dÃ©commenter si vous voulez ajouter une date aux fichiers de migration)
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# Ajout du chemin de l'application pour que les modules puissent Ãªtre chargÃ©s
prepend_sys_path = .

# Fuseau horaire utilisÃ© pour la gÃ©nÃ©ration des migrations
# timezone = UTC

# Longueur maximale des noms de fichiers de migration
# truncate_slug_length = 40

# Active lâ€™exÃ©cution du contexte des migrations lors de la commande "revision"
# (permet d'autogÃ©nÃ©rer les migrations en fonction des modÃ¨les SQLAlchemy)
revision_environment = false

# Autorise les fichiers .pyc et .pyo sans fichier source .py
# sourceless = false

# SpÃ©cification des chemins de stockage des versions de migration
version_locations = migrations/versions

# SÃ©parateur de chemin pour plusieurs emplacements de versions
# (utilisez ":" sur Linux/macOS et ";" sur Windows)
version_path_separator = os

# Active la recherche rÃ©cursive des fichiers source pour dÃ©tecter les modifications
# recursive_version_locations = false

# Encodage des fichiers de migration
output_encoding = utf-8


# ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹ Configuration de la base de donnÃ©es ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹
[db]
# URL de connexion Ã  la base de donnÃ©es
sqlalchemy.url = postgresql+psycopg2://maramata:maramata@localhost:5432/db_portfolio


# ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹ Hooks post-gÃ©nÃ©ration ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹
[post_write_hooks]
# Formatage automatique du code des fichiers de migration avec Black
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# Linting et correction automatique avec Ruff
# hooks = ruff
# ruff.type = exec
# ruff.executable = %(here)s/.venv/bin/ruff
# ruff.options = --fix REVISION_SCRIPT_FILENAME


# ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹ Configuration des logs ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console
qualname =

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S